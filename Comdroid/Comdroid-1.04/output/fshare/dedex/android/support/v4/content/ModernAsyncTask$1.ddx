.class final android/support/v4/content/ModernAsyncTask$1
.super java/lang/Object
.source ModernAsyncTask.java
.implements java/util/concurrent/ThreadFactory

.inner class 1 inner android/support/v4/content/ModernAsyncTask$1 outer android/support/v4/content/ModernAsyncTask
.field private final mCount Ljava/util/concurrent/atomic/AtomicInteger;

.method <init>()V
.limit registers 3
; this: v2 (Landroid/support/v4/content/ModernAsyncTask$1;)
.line 54
	invoke-direct	{v2},java/lang/Object/<init>	; <init>()V
; v2 : Landroid/support/v4/content/ModernAsyncTask$1;
.line 55
	new-instance	v0,java/util/concurrent/atomic/AtomicInteger
; v0 : Ljava/util/concurrent/atomic/AtomicInteger;
	const/4	v1,1
; v1 : single-length
	invoke-direct	{v0,v1},java/util/concurrent/atomic/AtomicInteger/<init>	; <init>(I)V
; v0 : Ljava/util/concurrent/atomic/AtomicInteger; , v1 : single-length
	iput-object	v0,v2,android/support/v4/content/ModernAsyncTask$1.mCount Ljava/util/concurrent/atomic/AtomicInteger;
; v0 : Ljava/util/concurrent/atomic/AtomicInteger; , v2 : Landroid/support/v4/content/ModernAsyncTask$1;
	return-void	
.end method

.method public newThread(Ljava/lang/Runnable;)Ljava/lang/Thread;
.limit registers 5
; this: v3 (Landroid/support/v4/content/ModernAsyncTask$1;)
; parameter[0] : v4 (Ljava/lang/Runnable;)
.line 58
	new-instance	v0,java/lang/Thread
; v0 : Ljava/lang/Thread;
	new-instance	v1,java/lang/StringBuilder
; v1 : Ljava/lang/StringBuilder;
	invoke-direct	{v1},java/lang/StringBuilder/<init>	; <init>()V
; v1 : Ljava/lang/StringBuilder;
	const-string	v2,"ModernAsyncTask #"
; v2 : Ljava/lang/String;
	invoke-virtual	{v1,v2},java/lang/StringBuilder/append	; append(Ljava/lang/String;)Ljava/lang/StringBuilder;
; v1 : Ljava/lang/StringBuilder; , v2 : Ljava/lang/String;
	move-result-object	v1
; v1 : Ljava/lang/StringBuilder;
	iget-object	v2,v3,android/support/v4/content/ModernAsyncTask$1.mCount Ljava/util/concurrent/atomic/AtomicInteger;
; v2 : Ljava/util/concurrent/atomic/AtomicInteger; , v3 : Landroid/support/v4/content/ModernAsyncTask$1;
	invoke-virtual	{v2},java/util/concurrent/atomic/AtomicInteger/getAndIncrement	; getAndIncrement()I
; v2 : Ljava/util/concurrent/atomic/AtomicInteger;
	move-result	v2
; v2 : single-length
	invoke-virtual	{v1,v2},java/lang/StringBuilder/append	; append(I)Ljava/lang/StringBuilder;
; v1 : Ljava/lang/StringBuilder; , v2 : single-length
	move-result-object	v1
; v1 : Ljava/lang/StringBuilder;
	invoke-virtual	{v1},java/lang/StringBuilder/toString	; toString()Ljava/lang/String;
; v1 : Ljava/lang/StringBuilder;
	move-result-object	v1
; v1 : Ljava/lang/String;
	invoke-direct	{v0,v4,v1},java/lang/Thread/<init>	; <init>(Ljava/lang/Runnable;Ljava/lang/String;)V
; v0 : Ljava/lang/Thread; , v4 : Ljava/lang/Runnable; , v1 : Ljava/lang/String;
	return-object	v0
; v0 : Ljava/lang/Thread;
.end method


